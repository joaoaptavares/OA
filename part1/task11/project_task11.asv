%% Task 11

clear;
load('x0.mat');

A = [1 0 0.1 0; 0 1 0 0.1; 0 0 0.9 0; 0 0 0 0.9];
B = [0 0; 0 0; 0.1 0; 0 0.1];
E = [1 0 0 0; 0 1 0 0];
c_k = [10 20 30 30 20 10; 10 10 10 0 0 -10];
time = [11 26 31 41 51 61];

p_initial = [0; 5];
p_final = [15; -15];

% comment! v = 0
x_initial = [p_initial; 0; 0];
x_final = [p_final; 0; 0];

T = 81;
K = 6; %waypoints
U_max = 15;
epsilon = 10^6;
M = 10;
x_last = x_task10;

waypoints_captured = zeros(M);
 
% for m = 1:M-1
%     cvx_begin quiet
%          variables u(2, T-1) x(4,T) %comment !
%          t = 1:T-1;
%          cost_function = 0;
% 
%          for j = 1:K
%             cost_function = cost_function + ...
%                 + 1/(norm(E*x_last(:,time(j)) - c_k(:,j), 2) + epsilon) * ...
%                 norm(E*x(:,time(j)) - c_k(:,j), 2);
%          end
% 
%          minimize(cost_function);
%          %constraints
%          subject to
%              x(:,1) == x_initial
%              x(:,T) == x_final
%              for j = 1:T-1
%                 norm(u(:,j),2) <= U_max
%              end
%              x(:,t+1) == A*x(:,t) + B*u(:,t)
% 
%     cvx_end

for m = 1:9
 cvx_begin quiet
     variables u(2,T-1) x(4,T) %state and control signal are th unknowns
     t = 1:T-1;
     cost = 0;
     %cost function
     for i = 1:K
         cost = cost + 1/(norm(E*x_last(:,time(i))- c_k(:,i), 2) + e) * ...
        norm(E*x(:,time(i) )- c_k(:,i), 2);
     end
     minimize(cost);
     %constraints
     subject to
     x(:,1) == x_initial
     x(:,T) == x_final
     for i = 1:T-1
        norm(u(:,i),2) <= Umax
     end
     x(:,t+1) == A*x(:,t) + B*u(:,t)
 cvx_end    
    
    
    
    
plt_x = figure;
plot(c_k(1,1:K),c_k(2,1:K),'s','MarkerEdgeColor','red','MarkerSize', ...
    12);
hold on;
plot(x(1,time(1:K)),x(2,time(1:K)),'o','MarkerEdgeColor','magenta','MarkerSize',10);
plot(x(1,:),x(2,:),'o','MarkerEdgeColor','blue','MarkerSize',4);
grid on;
axis([0 35 -15 15]);
saveas(plt_x,'task11_pltx.png');

plt_u = figure;
plot(t-1, u(1,:),'blue','LineWidth',1.5);
hold on;
plot(t-1, u(2,:),'cyan','LineWidth',1.5);
grid on;
leg = legend('$u_1(t)$', '$u_2(t)$');
set(leg, 'Interpreter','latex','FontSize',12);
saveas(plt_u,'task11_pltu.png');
    

    for j = 1:K
        if norm(E*x(:,time(j))- c_k(:,j)) <= 10^(-6)
            waypoints_captured(m) = waypoints_captured(m) + 1;
        end    
    end
    
    x_last = x;
    
end
    
% captured não está bem. Depois guardar imagens
    waypoints_captured 
  

   
    
